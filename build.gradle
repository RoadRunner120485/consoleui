buildscript {
  repositories {
    maven {
      url 'https://plugins.gradle.org/m2/'
    }
  }
}


apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'signing'

repositories {
    mavenCentral()
}

compileJava {
  sourceCompatibility = 1.8
  targetCompatibility = 1.8
}



dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile 'org.fusesource.jansi:jansi:1.11'
    //compile 'jline:jline:2.12'
  compile group: 'org.jline', name: 'jline', version: '3.12.1'
  compile group: 'org.jline', name: 'jline-terminal-jansi', version: '3.12.1'
  compile group: 'org.jline', name: 'jline-terminal-jna', version: '3.12.1'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}


// Fat-jar
task fatJar(type: Jar, dependsOn: [':compileJava', ':processResources']) {
  manifest {
    attributes 'Implementation-Title': 'ConsoleUI',
            'Implementation-Version': version,
            'Main-Class': 'de.codeshelf.consoleui.Basic'

  }

  baseName = project.name + '-all'
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
  with jar
}


task printEnv {
  println "username "+sonatypeUsername
}

artifacts {
    archives javadocJar, sourcesJar
}


signing {
  //
  // required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }

  sign configurations.archives
}


group = "de.codeshelf.consoleui"

if (project.hasProperty('release')) {
  uploadArchives {
    repositories {
      mavenDeployer {

        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
        /* just for testing
        repository(url: "file://localhost/${rootDir}/../myRepo/")
        */

        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
          authentication(userName: sonatypeUsername, password: sonatypePassword)
        }

        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
          authentication(userName: sonatypeUsername, password: sonatypePassword)
        }

        pom.project {
          name 'ConsoleUI'
          packaging 'jar'
          description 'Library for Ansi-Console user interaction'
          url 'https://github.com/awegmann/consoleui/'

          licenses {
            license {
              name 'The Apache Software License, Version 2.0'
              url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
              distribution 'repo'
            }
          }

          developers {
            developer {
              id "an10nn";
              name "Andreas Wegmann";
              email "andreas.we9mann@gmail.com";
            }
          }

          scm {
            connection 'scm:git:git://github.com/awegmann/consoleui.git'
            developerConnection 'scm:git:ssh://git@github.com:awegmann/consoleui.git'
            url 'https://github.com/awegmann/consoleui/'
          }
        }
      }
    }
  }
}
